{"version":3,"sources":["shared/Util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","onInput","id","useEffect","changeHandler","event","target","touchHandler","element","rows","onBlur","onChange","placeholder","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","navigate","useNavigate","placeSubmitHandler","a","preventDefault","formData","FormData","append","userId","process","Authorization","token","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"yPAAMA,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBC,EAAoB,iBAAO,CAAEC,KAAML,IAEnCM,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAAMJ,EACNM,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAAMF,IAEjCM,EAAW,SAACC,EAAOC,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,cAErBD,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BE,EAAyB,QAC9BA,EAAUR,OAASL,IACrBY,EAAUA,GAAWF,EAAMI,OAAOC,OAAS,GAEzCF,EAAUR,OAASJ,IACrBW,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUN,KAEpDM,EAAUR,OAASH,IACrBU,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUN,KA7BjC,QA+BnBM,EAAUR,OACZO,EAAUA,IAAYF,GAASG,EAAUN,KA/BpB,QAiCnBM,EAAUR,OACZO,EAAUA,IAAYF,GAASG,EAAUN,KAEvCM,EAAUR,OAASF,IACrBS,EAAUA,GAAW,iBAAiBI,KAAKN,KAnBF,8BAsB7C,OAAOE,I,iFCvCHK,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOd,MACb,IAAK,SACH,OAAO,2BACFa,GADL,IAEER,MAAOS,EAAOZ,IACdK,QAASH,YAASU,EAAOZ,IAAKY,EAAOR,cAEzC,IAAK,QACH,OAAO,2BACFO,GADL,IAEEE,WAAW,IAEf,QACE,OAAOF,IA+DEG,IA3DD,SAACC,GACb,MAA+BC,qBAAWN,EAAc,CACtDP,MAAOY,EAAME,cAAgB,GAC7BZ,QAASU,EAAMG,eAAgB,EAC/BL,WAAW,IAHb,mBAAOM,EAAP,KAAmBC,EAAnB,KAMQC,EAAgBN,EAAhBM,QAASC,EAAOP,EAAPO,GACTnB,EAAmBgB,EAAnBhB,MAAOE,EAAYc,EAAZd,QAEfkB,qBAAU,WACRF,EAAQC,EAAInB,EAAOE,KAClB,CAACgB,EAASC,EAAInB,EAAOE,IAExB,IAAMmB,EAAgB,SAACC,GACrBL,EAAS,CACPtB,KAAM,SACNE,IAAKyB,EAAMC,OAAOvB,MAClBC,WAAYW,EAAMX,cAIhBuB,EAAe,WACnBP,EAAS,CAAEtB,KAAM,WAGb8B,EACc,aAAlBb,EAAMa,QACJ,0BACEN,GAAIP,EAAMO,GACVO,KAAMd,EAAMc,MAAQ,EACpB1B,MAAOgB,EAAWhB,MAClB2B,OAAQH,EACRI,SAAUP,IAGZ,uBACEF,GAAIP,EAAMO,GACVxB,KAAMiB,EAAMjB,KACZkC,YAAajB,EAAMiB,YACnB7B,MAAOgB,EAAWhB,MAClB2B,OAAQH,EACRI,SAAUP,IAIhB,OACE,sBACES,UAAS,wBACNd,EAAWd,SAAWc,EAAWN,WAAa,yBAFnD,UAKE,uBAAOqB,QAASnB,EAAMO,GAAtB,SAA2BP,EAAMoB,QAChCP,GACCT,EAAWd,SAAWc,EAAWN,WAAa,4BAAIE,EAAMqB,iB,yHC3E1DC,EAAc,SAAC1B,EAAOC,GAC1B,OAAQA,EAAOd,MACb,IAAK,eACH,IAAIwC,GAAc,EAClB,IAAK,IAAMC,KAAW5B,EAAM6B,OACrB7B,EAAM6B,OAAOD,KAIhBD,EADEC,IAAY3B,EAAO2B,QACPD,GAAe1B,EAAOP,QAEtBiC,GAAe3B,EAAM6B,OAAOD,GAASlC,SAGvD,OAAO,2BACFM,GADL,IAEE6B,OAAO,2BACF7B,EAAM6B,QADL,kBAEH5B,EAAO2B,QAAU,CAAEpC,MAAOS,EAAOT,MAAOE,QAASO,EAAOP,WAE3DA,QAASiC,IAEb,IAAK,WACH,MAAO,CACLE,OAAQ5B,EAAO4B,OACfF,YAAa1B,EAAO0B,aAGxB,QACE,OAAO3B,IAIA8B,EAAU,SAACC,EAAeC,GACrC,MAA8B3B,qBAAWqB,EAAa,CACpDG,OAAQE,EACRrC,QAASsC,IAFX,mBAAOC,EAAP,KAAkBxB,EAAlB,KAyBA,MAAO,CAACwB,EApBaC,uBACnB,SAACvB,EAAInB,EAAOE,GACVe,EAAS,CACPtB,KAAM,eACNK,MAAOA,EACPE,QAASA,EACTkC,QAASjB,MAGb,CAACF,IAGiByB,uBAAY,SAACC,EAAWC,GAC1C3B,EAAS,CACPtB,KAAM,WACN0C,OAAQM,EACRR,YAAaS,MAEd,O,8FCOUC,IA7DK,SAACjC,GACnB,MAAwBkC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAO5C,EAAP,KAAgBiD,EAAhB,KAEMC,EAAgBC,mBAEtBjC,qBAAU,WACR,GAAK2B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBN,EAAcI,EAAWG,SAE3BH,EAAWI,cAAcX,MACxB,CAACA,IAqBJ,OACE,sBAAKjB,UAAU,eAAf,UACE,uBACEnC,KAAK,OACLgE,IAAKP,EACLQ,MAAO,CAAEC,QAAS,QAClBC,OAAO,kBACPlC,SA1BqB,SAACN,GAC1B,IAAIyC,EACAC,EAAc9D,EACdoB,EAAMC,OAAO0C,OAAuC,IAA9B3C,EAAMC,OAAO0C,MAAM5D,QAC3C0D,EAAazC,EAAMC,OAAO0C,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAEhBpD,EAAMM,QAAQN,EAAMO,GAAI4C,EAAYC,IAehC7C,GAAIP,EAAMO,KAEZ,sBAAKW,UAAS,uBAAkBlB,EAAMsD,QAAU,UAAhD,UACE,sBAAKpC,UAAU,wBAAf,UACGmB,GAAc,qBAAKkB,IAAKlB,EAAYmB,IAAI,aACvCnB,GAAc,yDAElB,cAAC,IAAD,CAAQoB,QAnBW,WACvBjB,EAAckB,QAAQC,SAkBiB5E,KAAK,SAAxC,4BAIAO,GAAW,4BAAIU,EAAMqB,iB,6MCgDduC,UA5FE,WACf,IAAMC,EAAOC,qBAAWC,KACxB,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAkC1C,YAChC,CACE2C,MAAO,CACLjF,MAAO,GACPE,SAAS,GAEXgF,YAAa,CACXlF,MAAO,GACPE,SAAS,GAEXiF,QAAS,CACPnF,MAAO,GACPE,SAAS,GAEXkF,MAAO,CACLpF,MAAO,KACPE,SAAS,KAGb,GAnBF,mBAAOuC,EAAP,KAAkB4C,EAAlB,KAsBMC,EAAWC,cAEXC,EAAkB,uCAAG,WAAOlE,GAAP,eAAAmE,EAAA,6DACzBnE,EAAMoE,iBADmB,UAGjBC,EAAW,IAAIC,UACZC,OAAO,QAASpD,EAAUJ,OAAO4C,MAAMjF,OAChD2F,EAASE,OAAO,cAAepD,EAAUJ,OAAO6C,YAAYlF,OAC5D2F,EAASE,OAAO,UAAWpD,EAAUJ,OAAO8C,QAAQnF,OACpD2F,EAASE,OAAO,QAASpD,EAAUJ,OAAO+C,MAAMpF,OAChD2F,EAASE,OAAO,UAAWpB,EAAKqB,QART,UASjBf,EACJgB,mDACA,OACAJ,EACA,CACEK,cAAe,UAAYvB,EAAKwB,QAdb,QAiBvBX,EAAS,eAjBc,4GAAH,sDAqBxB,OACE,eAAC,IAAMY,SAAP,WACE,cAAC,IAAD,CAAYpB,MAAOA,EAAOqB,QAASnB,IACnC,uBAAMlD,UAAU,aAAasE,SAAUZ,EAAvC,UACGX,GAAa,cAAC,IAAD,CAAgBwB,WAAS,IACvC,cAAC,IAAD,CACElF,GAAG,QACHM,QAAQ,QACR9B,KAAK,OACLqC,MAAM,QACN/B,WAAY,CAACP,eACbuC,UAAU,8BACVf,QAASmE,IAEX,cAAC,IAAD,CACElE,GAAG,cACHM,QAAQ,WACRO,MAAM,cACN/B,WAAY,CAACL,YAAoB,IACjCqC,UAAU,4DACVf,QAASmE,IAEX,cAAC,IAAD,CACElE,GAAG,UACHM,QAAQ,QACRO,MAAM,UACN/B,WAAY,CAACP,eACbuC,UAAU,gCACVf,QAASmE,IAEX,cAAC,IAAD,CACEnB,QAAM,EACN/C,GAAG,QACHD,QAASmE,EACTpD,UAAU,4BAEZ,cAAC,IAAD,CAAQtC,KAAK,SAAS2G,UAAW7D,EAAUvC,QAA3C","file":"static/js/7.3cf68215.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useEffect, useReducer } from \"react\";\n\nimport { validate } from \"../../Util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { onInput, id } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  const element =\n    props.element === \"textarea\" ? (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        value={inputState.value}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n      />\n    ) : (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        value={inputState.value}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        formIsValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback(\n    (id, value, isValid) => {\n      dispatch({\n        type: \"INPUT_CHANGE\",\n        value: value,\n        isValid: isValid,\n        inputId: id,\n      });\n    },\n    [dispatch]\n  );\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"./Button\";\n\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedImageHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        type=\"file\"\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedImageHandler}\n        id={props.id}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button onClick={pickImageHandler} type=\"button\">\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/Util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      formData.append(\"creator\", auth.userId);\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      navigate(\"/all-places\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          center\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}