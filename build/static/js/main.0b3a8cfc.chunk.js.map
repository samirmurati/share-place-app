{"version":3,"sources":["shared/hooks/auth-hook.js","shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","AuthContext","createContext","token","userId","login","logout","AuthProvider","props","useState","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","Provider","value","isLoggedIn","children","Button","href","className","size","inverse","danger","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","MainHeader","NavLinks","authCtx","useContext","navigate","useNavigate","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","showDrawer","setShowDrawer","closeDrawer","Fragment","AllPlaces","React","lazy","UpdatePlace","NewPlace","UserPlaces","Auth","Users","App","routes","path","element","fallback","render"],"mappings":"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","file":"static/js/main.0b3a8cfc.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import { createContext } from \"react\";\nimport { useAuth } from \"../hooks/auth-hook\";\n\nexport const AuthContext = createContext({\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n\nconst AuthProvider = (props) => {\n  const { token, login, logout, userId } = useAuth();\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token,\n        login,\n        logout,\n        userId,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth-context\";\nimport Button from \"../FormElements/Button\";\n\nimport \"./NavLinks.css\";\n\nconst NavLinks = () => {\n  const authCtx = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/all-places\">ALL PLACES</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/users\">ALL USERS</NavLink>\n      </li>\n      <li>\n        {authCtx.isLoggedIn && (\n          <NavLink to={`${authCtx.userId}/places`}>MY PLACES</NavLink>\n        )}\n      </li>\n      <li>\n        {authCtx.isLoggedIn && <NavLink to=\"/places/new\">ADD PLACE</NavLink>}\n      </li>\n      <li>\n        {!authCtx.isLoggedIn && <NavLink to=\"/auth\">AUTHENTICATE</NavLink>}\n        {authCtx.isLoggedIn && (\n          <Button\n            onClick={() => {\n              authCtx.logout();\n              navigate(\"/auth\");\n            }}\n          >\n            Logout\n          </Button>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { Link } from \"react-router-dom\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  const [showDrawer, setShowDrawer] = useState(false);\n\n  const handleDrawerClick = () => {\n    setShowDrawer(true);\n  };\n  const closeDrawer = () => {\n    setShowDrawer(false);\n  };\n\n  return (\n    <React.Fragment>\n      {showDrawer && <Backdrop onClick={closeDrawer} />}\n\n      <SideDrawer show={showDrawer} onClick={closeDrawer}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          onClick={handleDrawerClick}\n          className=\"main-navigation__menu-btn\"\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense, useContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import AllPlaces from \"./places/pages/AllPlaces\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\n\n// import Auth from \"./users/pages/Auth\";\n// import Users from \"./users/pages/Users\";\n\nconst AllPlaces = React.lazy(() => import(\"./places/pages/AllPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  let routes;\n\n  if (authCtx.token) {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<AllPlaces />} />\n        <Route path=\"/users\" element={<Users />} />\n        <Route path=\"/all-places\" element={<AllPlaces />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/places/new\" element={<NewPlace />} />\n        <Route path=\"/places/:placeId\" element={<UpdatePlace />} />\n\n        <Route path=\"*\" element={<AllPlaces />} />\n      </Routes>\n    );\n  } else {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<AllPlaces />} />\n        <Route path=\"/all-places\" element={<AllPlaces />} />\n        <Route path=\"/users\" element={<Users />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/auth\" element={<Auth />} />\n        <Route path=\"*\" element={<Users />} />\n      </Routes>\n    );\n  }\n\n  return (\n    <Router>\n      <MainNavigation />\n      <main>\n        <Suspense\n          fallback={\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          {routes}\n        </Suspense>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthProvider from \"./shared/context/auth-context\";\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}